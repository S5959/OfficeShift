
## server port 설정
server.port=80


## MySQL 연동
## Datasource 연결
spring.datasource.hikari.username=officeshift
spring.datasource.hikari.password=officeshift
spring.datasource.url=jdbc:mysql://localhost:3306/officeshift
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver


## JSP 연동
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp





## ▼ Log 처리

## hibernate
##--------------------------------------------------------------------
# 테이블 셍성
spring.jpa.hibernate.ddl-auto=create
# VO 클래스의 멤버변수명이 자동으로 DB에 컬럼명과 연결이 안 될 때
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# 배포시 주석처리-----------------------
# 개발시 Log 기록 보기 위해 사용

# JPA에서 자동으로 생성되고 실행되는 SQL문을 실시간 출력
logging.level.org.hibernate.sql=debug

# ? 에 맵핑되는 파라미터값 출력
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# hibernate 가 실행하는 SQL 출력
spring.jpa.show-sql=true

# hibernate가 실행한 SQL 출력할 때 보기 쉽게 출력
spring.jpa.properties.hibernate.format_sql=true

# transaction 처리
spring.aop.proxy-target-class=true
##--------------------------------------------------------------------




## mybatis 주석 
## 배포시 주석처리
##--------------------------------------------------------------------
# spring.datasource.url=jdbc:log4jdbc:mysql://localhost:3306/officeshift
# spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy

# log4jdbc.spylogdelegator.name=net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator
##--------------------------------------------------------------------




